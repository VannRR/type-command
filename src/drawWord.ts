import { HexColor, Layer } from "./types.ts";

export const CHAR_PIXEL_WIDTH = 7;
export const CHAR_PIXEL_HEIGHT = 7;
const CHARS = new Map([
  [
    "A",
    [
      [0, 0, 0, 1, 1, 0, 0],
      [0, 0, 1, 1, 1, 1, 0],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 1, 1, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
    ],
  ],
  [
    "B",
    [
      [1, 1, 1, 1, 1, 1, 0],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 1, 1, 0, 0],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [1, 1, 1, 1, 1, 1, 0],
    ],
  ],
  [
    "C",
    [
      [0, 0, 1, 1, 1, 1, 0],
      [0, 1, 1, 0, 0, 1, 1],
      [1, 1, 0, 0, 0, 0, 0],
      [1, 1, 0, 0, 0, 0, 0],
      [1, 1, 0, 0, 0, 0, 0],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 0, 1, 1, 1, 1, 0],
    ],
  ],
  [
    "D",
    [
      [1, 1, 1, 1, 1, 1, 0],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [1, 1, 1, 1, 1, 1, 0],
    ],
  ],
  [
    "E",
    [
      [1, 1, 1, 1, 1, 1, 1],
      [0, 1, 1, 0, 0, 0, 1],
      [0, 1, 1, 0, 1, 0, 0],
      [0, 1, 1, 1, 1, 0, 0],
      [0, 1, 1, 0, 1, 0, 0],
      [0, 1, 1, 0, 0, 0, 1],
      [1, 1, 1, 1, 1, 1, 1],
    ],
  ],
  [
    "F",
    [
      [1, 1, 1, 1, 1, 1, 1],
      [0, 1, 1, 0, 0, 0, 1],
      [0, 1, 1, 0, 1, 0, 0],
      [0, 1, 1, 1, 1, 0, 0],
      [0, 1, 1, 0, 1, 0, 0],
      [0, 1, 1, 0, 0, 0, 0],
      [1, 1, 1, 1, 0, 0, 0],
    ],
  ],
  [
    "G",
    [
      [0, 0, 1, 1, 1, 1, 0],
      [0, 1, 1, 0, 0, 1, 1],
      [1, 1, 0, 0, 0, 0, 0],
      [1, 1, 0, 0, 0, 0, 0],
      [1, 1, 0, 0, 1, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 0, 1, 1, 1, 1, 1],
    ],
  ],
  [
    "H",
    [
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 1, 1, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
    ],
  ],
  [
    "I",
    [
      [0, 1, 1, 1, 1, 1, 1],
      [0, 0, 0, 1, 1, 0, 0],
      [0, 0, 0, 1, 1, 0, 0],
      [0, 0, 0, 1, 1, 0, 0],
      [0, 0, 0, 1, 1, 0, 0],
      [0, 0, 0, 1, 1, 0, 0],
      [0, 1, 1, 1, 1, 1, 1],
    ],
  ],
  [
    "J",
    [
      [0, 0, 0, 1, 1, 1, 1],
      [0, 0, 0, 0, 1, 1, 0],
      [0, 0, 0, 0, 1, 1, 0],
      [0, 0, 0, 0, 1, 1, 0],
      [1, 1, 0, 0, 1, 1, 0],
      [1, 1, 0, 0, 1, 1, 0],
      [0, 1, 1, 1, 1, 0, 0],
    ],
  ],
  [
    "K",
    [
      [1, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 1, 1, 0],
      [0, 1, 1, 1, 1, 0, 0],
      [0, 1, 1, 0, 1, 1, 0],
      [0, 1, 1, 0, 0, 1, 1],
      [1, 1, 1, 0, 0, 1, 1],
    ],
  ],
  [
    "L",
    [
      [1, 1, 1, 1, 0, 0, 0],
      [0, 1, 1, 0, 0, 0, 0],
      [0, 1, 1, 0, 0, 0, 0],
      [0, 1, 1, 0, 0, 0, 0],
      [0, 1, 1, 0, 0, 0, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [1, 1, 1, 1, 1, 1, 1],
    ],
  ],
  [
    "M",
    [
      [1, 1, 0, 0, 0, 1, 1],
      [1, 1, 1, 0, 1, 1, 1],
      [1, 1, 1, 1, 1, 1, 1],
      [1, 1, 1, 1, 1, 1, 1],
      [1, 1, 0, 1, 0, 1, 1],
      [1, 1, 0, 0, 0, 1, 1],
      [1, 1, 0, 0, 0, 1, 1],
    ],
  ],
  [
    "N",
    [
      [1, 1, 0, 0, 0, 1, 1],
      [1, 1, 1, 0, 0, 1, 1],
      [1, 1, 1, 1, 0, 1, 1],
      [1, 1, 0, 1, 1, 1, 1],
      [1, 1, 0, 0, 1, 1, 1],
      [1, 1, 0, 0, 0, 1, 1],
      [1, 1, 0, 0, 0, 1, 1],
    ],
  ],
  [
    "O",
    [
      [0, 0, 1, 1, 1, 0, 0],
      [0, 1, 1, 0, 1, 1, 0],
      [1, 1, 0, 0, 0, 1, 1],
      [1, 1, 0, 0, 0, 1, 1],
      [1, 1, 0, 0, 0, 1, 1],
      [0, 1, 1, 0, 1, 1, 0],
      [0, 0, 1, 1, 1, 0, 0],
    ],
  ],
  [
    "P",
    [
      [1, 1, 1, 1, 1, 1, 0],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 1, 1, 1, 0],
      [0, 1, 1, 0, 0, 0, 0],
      [0, 1, 1, 0, 0, 0, 0],
      [1, 1, 1, 1, 0, 0, 0],
    ],
  ],
  [
    "Q",
    [
      [0, 0, 1, 1, 1, 0, 0],
      [0, 1, 1, 0, 1, 1, 0],
      [1, 1, 0, 0, 0, 1, 1],
      [1, 1, 0, 0, 0, 1, 1],
      [1, 1, 0, 1, 1, 0, 1],
      [0, 1, 1, 0, 1, 1, 0],
      [0, 0, 1, 1, 0, 1, 1],
    ],
  ],
  [
    "R",
    [
      [1, 1, 1, 1, 1, 1, 0],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 1, 1, 1, 0],
      [0, 1, 1, 0, 1, 1, 0],
      [0, 1, 1, 0, 0, 1, 1],
      [1, 1, 1, 0, 0, 1, 1],
    ],
  ],
  [
    "S",
    [
      [0, 0, 1, 1, 1, 1, 0],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 0, 0],
      [0, 0, 1, 1, 1, 1, 0],
      [0, 0, 0, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 0, 1, 1, 1, 1, 0],
    ],
  ],
  [
    "T",
    [
      [0, 1, 1, 1, 1, 1, 1],
      [0, 1, 0, 1, 1, 0, 1],
      [0, 0, 0, 1, 1, 0, 0],
      [0, 0, 0, 1, 1, 0, 0],
      [0, 0, 0, 1, 1, 0, 0],
      [0, 0, 0, 1, 1, 0, 0],
      [0, 0, 1, 1, 1, 1, 0],
    ],
  ],
  [
    "U",
    [
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 0, 1, 1, 1, 1, 0],
    ],
  ],
  [
    "V",
    [
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 0, 1, 1, 1, 1, 0],
      [0, 0, 0, 1, 1, 0, 0],
    ],
  ],
  [
    "W",
    [
      [1, 1, 0, 0, 0, 1, 1],
      [1, 1, 0, 0, 0, 1, 1],
      [1, 1, 0, 0, 0, 1, 1],
      [1, 1, 0, 1, 0, 1, 1],
      [1, 1, 1, 1, 1, 1, 1],
      [1, 1, 1, 0, 1, 1, 1],
      [1, 1, 0, 0, 0, 1, 1],
    ],
  ],
  [
    "X",
    [
      [1, 1, 0, 0, 0, 1, 1],
      [0, 1, 1, 0, 1, 1, 0],
      [0, 0, 1, 1, 1, 0, 0],
      [0, 0, 1, 1, 1, 0, 0],
      [0, 1, 1, 0, 1, 1, 0],
      [1, 1, 0, 0, 0, 1, 1],
      [1, 1, 0, 0, 0, 1, 1],
    ],
  ],
  [
    "Y",
    [
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [0, 0, 1, 1, 1, 1, 0],
      [0, 0, 0, 1, 1, 0, 0],
      [0, 0, 0, 1, 1, 0, 0],
      [0, 0, 1, 1, 1, 1, 0],
    ],
  ],
  [
    "Z",
    [
      [1, 1, 1, 1, 1, 1, 1],
      [1, 1, 0, 0, 0, 1, 1],
      [1, 0, 0, 0, 1, 1, 0],
      [0, 0, 0, 1, 1, 0, 0],
      [0, 0, 1, 1, 0, 0, 1],
      [0, 1, 1, 0, 0, 1, 1],
      [1, 1, 1, 1, 1, 1, 1],
    ],
  ],
]);

export function drawWord(
  layer: Layer,
  backgroundColor: HexColor | null,
  textColor: HexColor,
  x: number,
  y: number,
  pixelSize: number,
  word: string
): void {
  if (word.length === 0) {
    return;
  }
  const charWidth = CHAR_PIXEL_WIDTH * pixelSize;
  const charHeight = CHAR_PIXEL_HEIGHT * pixelSize;
  const wordMiddle = Math.floor(word.length * charWidth * 0.55);
  if (backgroundColor === null) {
    layer.clearRect(
      x - wordMiddle - pixelSize,
      y - (pixelSize * 2),
      (word.length * charWidth) + (pixelSize * word.length) + pixelSize * 2,
      charHeight + (pixelSize * 4)
    );
  } else {
    layer.fillStyle = backgroundColor;
    layer.fillRect(
      x - wordMiddle - pixelSize,
      y - (pixelSize * 2),
      (word.length * charWidth) + (pixelSize * word.length) + pixelSize * 2,
      charHeight + (pixelSize * 4)
    );
  }
  layer.fillStyle = textColor;
  for (let l = 0; l < word.length; l++) {
    const char = CHARS.get(word[l]);
    if (char === undefined) {
      continue;
    }
    char.forEach((row, j) => {
      row.forEach((cell, i) => {
        if (cell === 1) {
          layer.fillRect(
            i * pixelSize + x + l * charWidth + l * pixelSize - wordMiddle,
            j * pixelSize + y,
            pixelSize,
            pixelSize
          );
        }
      });
    });
  }
}
